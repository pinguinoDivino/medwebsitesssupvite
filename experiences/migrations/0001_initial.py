# Generated by Django 4.1.7 on 2023-05-26 09:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import experiences.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('Italy', 'Italy'), ('Andorra', 'Andorra'), ('United Arab Emirates', 'United Arab Emirates'), ('Afghanistan', 'Afghanistan'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Anguilla', 'Anguilla'), ('Albania', 'Albania'), ('Armenia', 'Armenia'), ('Angola', 'Angola'), ('Argentina', 'Argentina'), ('American Samoa', 'American Samoa'), ('Austria', 'Austria'), ('Australia', 'Australia'), ('Aruba', 'Aruba'), ('Aland Islands', 'Aland Islands'), ('Azerbaijan', 'Azerbaijan'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Barbados', 'Barbados'), ('Bangladesh', 'Bangladesh'), ('Belgium', 'Belgium'), ('Burkina Faso', 'Burkina Faso'), ('Bulgaria', 'Bulgaria'), ('Bahrain', 'Bahrain'), ('Burundi', 'Burundi'), ('Benin', 'Benin'), ('Saint Barthelemy', 'Saint Barthelemy'), ('Bermuda', 'Bermuda'), ('Brunei', 'Brunei'), ('Bolivia', 'Bolivia'), ('Bonaire Saint Eustatius and Saba', 'Bonaire Saint Eustatius and Saba'), ('Brazil', 'Brazil'), ('Bahamas', 'Bahamas'), ('Bhutan', 'Bhutan'), ('Botswana', 'Botswana'), ('Belarus', 'Belarus'), ('Belize', 'Belize'), ('Canada', 'Canada'), ('Cocos Islands', 'Cocos Islands'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Central African Republic', 'Central African Republic'), ('Republic of the Congo', 'Republic of the Congo'), ('Switzerland', 'Switzerland'), ('Ivory Coast', 'Ivory Coast'), ('Cook Islands', 'Cook Islands'), ('Chile', 'Chile'), ('Cameroon', 'Cameroon'), ('China', 'China'), ('Colombia', 'Colombia'), ('Colombia"Archipiélago de San Andrés', 'Colombia"Archipiélago de San Andrés'), ('Costa Rica', 'Costa Rica'), ('Cuba', 'Cuba'), ('Cape Verde', 'Cape Verde'), ('Curacao', 'Curacao'), ('Christmas Island', 'Christmas Island'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Germany', 'Germany'), ('Djibouti', 'Djibouti'), ('Denmark', 'Denmark'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('Algeria', 'Algeria'), ('Ecuador', 'Ecuador'), ('Estonia', 'Estonia'), ('Egypt', 'Egypt'), ('Western Sahara', 'Western Sahara'), ('Eritrea', 'Eritrea'), ('Spain', 'Spain'), ('Ethiopia', 'Ethiopia'), ('Ethiopia"Southern Nations Nationalities', 'Ethiopia"Southern Nations Nationalities'), ('Finland', 'Finland'), ('Fiji', 'Fiji'), ('Falkland Islands', 'Falkland Islands'), ('Micronesia', 'Micronesia'), ('Faroe Islands', 'Faroe Islands'), ('France', 'France'), ('Gabon', 'Gabon'), ('United Kingdom', 'United Kingdom'), ('Grenada', 'Grenada'), ('Georgia', 'Georgia'), ('French Guiana', 'French Guiana'), ('Guernsey', 'Guernsey'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Greenland', 'Greenland'), ('Gambia', 'Gambia'), ('Guinea', 'Guinea'), ('Guadeloupe', 'Guadeloupe'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Greece', 'Greece'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('Guatemala', 'Guatemala'), ('Guam', 'Guam'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Hong Kong', 'Hong Kong'), ('Honduras', 'Honduras'), ('Croatia', 'Croatia'), ('Haiti', 'Haiti'), ('Hungary', 'Hungary'), ('Indonesia', 'Indonesia'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Isle of Man', 'Isle of Man'), ('India', 'India'), ('Iraq', 'Iraq'), ('Iran', 'Iran'), ('Iceland', 'Iceland'), ('Jersey', 'Jersey'), ('Jamaica', 'Jamaica'), ('Jordan', 'Jordan'), ('Japan', 'Japan'), ('Kenya', 'Kenya'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Cambodia', 'Cambodia'), ('Kiribati', 'Kiribati'), ('Comoros', 'Comoros'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('North Korea', 'North Korea'), ('South Korea', 'South Korea'), ('Kuwait', 'Kuwait'), ('Cayman Islands', 'Cayman Islands'), ('Kazakhstan', 'Kazakhstan'), ('Laos', 'Laos'), ('Lebanon', 'Lebanon'), ('Saint Lucia', 'Saint Lucia'), ('Liechtenstein', 'Liechtenstein'), ('Sri Lanka', 'Sri Lanka'), ('Liberia', 'Liberia'), ('Lesotho', 'Lesotho'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Latvia', 'Latvia'), ('Libya', 'Libya'), ('Morocco', 'Morocco'), ('Monaco', 'Monaco'), ('Moldova', 'Moldova'), ('Montenegro', 'Montenegro'), ('Saint Martin', 'Saint Martin'), ('Madagascar', 'Madagascar'), ('Marshall Islands', 'Marshall Islands'), ('Macedonia', 'Macedonia'), ('Mali', 'Mali'), ('Myanmar', 'Myanmar'), ('Mongolia', 'Mongolia'), ('Macao', 'Macao'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Montserrat', 'Montserrat'), ('Malta', 'Malta'), ('Mauritius', 'Mauritius'), ('Maldives', 'Maldives'), ('Malawi', 'Malawi'), ('Mexico', 'Mexico'), ('Malaysia', 'Malaysia'), ('Namibia', 'Namibia'), ('Mozambique', 'Mozambique'), ('New Caledonia', 'New Caledonia'), ('Niger', 'Niger'), ('Norfolk Island', 'Norfolk Island'), ('Nigeria', 'Nigeria'), ('Nicaragua', 'Nicaragua'), ('Netherlands', 'Netherlands'), ('Norway', 'Norway'), ('Nepal', 'Nepal'), ('Nauru', 'Nauru'), ('Niue', 'Niue'), ('New Zealand', 'New Zealand'), ('Oman', 'Oman'), ('Panama', 'Panama'), ('Peru', 'Peru'), ('French Polynesia', 'French Polynesia'), ('Papua New Guinea', 'Papua New Guinea'), ('Philippines', 'Philippines'), ('Pakistan', 'Pakistan'), ('Poland', 'Poland'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Pitcairn', 'Pitcairn'), ('Puerto Rico', 'Puerto Rico'), ('Palestinian Territory', 'Palestinian Territory'), ('Portugal', 'Portugal'), ('Palau', 'Palau'), ('Paraguay', 'Paraguay'), ('Qatar', 'Qatar'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Serbia', 'Serbia'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saudi Arabia', 'Saudi Arabia'), ('Solomon Islands', 'Solomon Islands'), ('Seychelles', 'Seychelles'), ('Sudan', 'Sudan'), ('Sweden', 'Sweden'), ('Singapore', 'Singapore'), ('Saint Helena', 'Saint Helena'), ('Slovenia', 'Slovenia'), ('Svalbard and Jan Mayen', 'Svalbard and Jan Mayen'), ('Slovakia', 'Slovakia'), ('Sierra Leone', 'Sierra Leone'), ('San Marino', 'San Marino'), ('Senegal', 'Senegal'), ('Somalia', 'Somalia'), ('Suriname', 'Suriname'), ('South Sudan', 'South Sudan'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('El Salvador', 'El Salvador'), ('Sint Maarten', 'Sint Maarten'), ('Syria', 'Syria'), ('Swaziland', 'Swaziland'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Chad', 'Chad'), ('French Southern Territories', 'French Southern Territories'), ('Togo', 'Togo'), ('Thailand', 'Thailand'), ('Tajikistan', 'Tajikistan'), ('East Timor', 'East Timor'), ('Turkmenistan', 'Turkmenistan'), ('Tunisia', 'Tunisia'), ('Tonga', 'Tonga'), ('Turkey', 'Turkey'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tuvalu', 'Tuvalu'), ('Taiwan', 'Taiwan'), ('Tanzania', 'Tanzania'), ('Ukraine', 'Ukraine'), ('Uganda', 'Uganda'), ('United States', 'United States'), (' D.C."United States"Washington', ' D.C."United States"Washington'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vatican', 'Vatican'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Venezuela', 'Venezuela'), ('British Virgin Islands', 'British Virgin Islands'), ('U.S. Virgin Islands', 'U.S. Virgin Islands'), ('Vietnam', 'Vietnam'), ('Vanuatu', 'Vanuatu'), ('Wallis and Futuna', 'Wallis and Futuna'), ('Samoa', 'Samoa'), ('Kosovo', 'Kosovo'), ('Yemen', 'Yemen'), ('Mayotte', 'Mayotte'), ('South Africa', 'South Africa'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], help_text='stato', max_length=300, verbose_name='stato')),
                ('region', models.CharField(help_text='regione', max_length=300, verbose_name='regione')),
                ('city', models.CharField(help_text='comune', max_length=300, verbose_name='comune')),
            ],
            options={
                'verbose_name': 'città',
                'verbose_name_plural': 'città',
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='CongressConferenceSummerSchoolAdditionalAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=300, null=True, verbose_name='titolo')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, verbose_name='costo')),
                ('organization', models.CharField(blank=True, max_length=300, null=True, verbose_name='organizzazione')),
                ('link_organization', models.CharField(blank=True, max_length=1000, null=True, verbose_name='link organizzazione')),
                ('link', models.CharField(blank=True, max_length=1000, null=True, verbose_name='link conferenza')),
            ],
            options={
                'verbose_name': 'attributi congresso, conferenza e summer school',
                'verbose_name_plural': 'attributi congressi, conferenze e summer schools',
                'db_table': 'congress_conference_summerschool_attributes',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='aggiunta il')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='aggiornata il')),
                ('author_contact', models.CharField(blank=True, default='email istituzionale', max_length=150, verbose_name='contatto autore')),
                ('review', models.TextField(help_text='Descrizione e recensione', verbose_name='recensione')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('started_at', models.DateField(blank=True, null=True, verbose_name='iniziata il')),
                ('ended_at', models.DateField(blank=True, null=True, verbose_name='terminata il')),
                ('description', models.CharField(max_length=300, verbose_name='descrizione')),
                ('indications', models.TextField(blank=True, help_text='Consigli pratici da dare', null=True, verbose_name='consigli')),
                ('img', models.ImageField(blank=True, null=True, upload_to='imgs/%Y/%m/%d', verbose_name='immagine')),
                ('ref', models.CharField(help_text="referente a cui rivolgersi per effetturare l'esperienza ", max_length=150, verbose_name='referente')),
                ('type', models.CharField(blank=True, choices=[('sfs', 'SFS'), ('lab', 'Laboratorio'), ('summerschool', 'Summer School'), ('congress', 'Congresso'), ('internship', 'Tirocinio'), ('erasmus', 'Erasmus')], max_length=14, verbose_name='tipo esperienza')),
                ('group', models.CharField(blank=True, default='3qcmmv', max_length=6, verbose_name='gruppo')),
            ],
            options={
                'verbose_name': 'esperienza',
                'verbose_name_plural': 'esperienze',
                'db_table': 'experiences',
            },
        ),
        migrations.CreateModel(
            name='InternshipAdditionalAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward', models.CharField(blank=True, max_length=50, null=True, verbose_name='reparto')),
                ('institution', models.CharField(blank=True, max_length=300, null=True, verbose_name='istituzione')),
            ],
            options={
                'verbose_name': 'attributi del tirocinio',
                'verbose_name_plural': 'attributi dei tirocini',
                'db_table': 'internship_attributes',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('global_r', models.PositiveSmallIntegerField(verbose_name='v. globale')),
                ('stay_r', models.PositiveSmallIntegerField(verbose_name='v. istituzione')),
                ('acquired_knowledge_r', models.PositiveSmallIntegerField(verbose_name='v. conoscenza acquisita')),
                ('involvement_r', models.PositiveSmallIntegerField(verbose_name='v. coinvolgimento')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='aggiornata il')),
            ],
            options={
                'verbose_name': 'valutazione',
                'verbose_name_plural': 'valutazioni',
                'db_table': 'ratings',
            },
        ),
        migrations.CreateModel(
            name='SfsLabErasmusAdditionalAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thesis', models.BooleanField(blank=True, default=None, null=True, verbose_name='si può scrivere la tesi?')),
                ('institution', models.CharField(blank=True, max_length=300, null=True, verbose_name='istituzione')),
            ],
            options={
                'verbose_name': 'attributi sfs, laboratorio ed erasmus',
                'verbose_name_plural': 'attributi sfs, laboratori ed erasmus',
                'db_table': 'sfs_lab_attributes',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('name', experiences.models.NameField(max_length=300, primary_key=True, serialize=False, verbose_name='nome')),
                ('group', models.CharField(choices=[('city', 'Città'), ('about', 'Ambito'), ('prof', 'Docente'), ('institute', 'Istituto'), ('opportunity', 'Opportunità')], max_length=50, verbose_name='gruppo')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='UnipiInternship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='aggiunta il')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='aggiornata il')),
                ('author_contact', models.CharField(blank=True, default='email istituzionale', max_length=150, verbose_name='contatto autore')),
                ('review', models.TextField(help_text='Descrizione e recensione', verbose_name='recensione')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('academic_year', models.PositiveSmallIntegerField(choices=[(3, 'III'), (4, 'IV'), (5, 'V'), (6, 'VI')], verbose_name='anno accademico')),
                ('recommended_year', models.PositiveSmallIntegerField(choices=[(3, 'III'), (4, 'IV'), (5, 'V'), (6, 'VI')], verbose_name='anno accademico consigliato')),
                ('ward', models.CharField(choices=[('A1', 'Chirurgia toracica mininvasiva e robotica'), ('B1', 'Endoscopia Toracica'), ('C1', 'Otorinolaringoiatria audiologia e foniatria'), ('D1', "Endocrinologia e Metabolismo dei Trapianti d'Organo e Cellulari"), ('E1', 'Malattie metaboliche e diabetologia'), ('F1', 'Dermatologia'), ('G1', 'Reumatologia'), ('H1', 'Immunoallergologia clinica'), ('I1', 'Epatologia'), ('J1', 'Cardioangiologia'), ('K1', 'Chirurgia vascolare'), ('L1', 'Ematologia'), ('M1', 'Urologia 1'), ('N1', 'Ortopedia e Traumatologia 1'), ('O1', 'Chirurgia Toracica'), ('P1', 'Chirurgia Generale 1'), ('Q1', 'Chirurgia Epatica e del Trapianto di Fegato'), ('R1', 'Cardiochirurgia'), ('S1', 'Senologia'), ('T1', 'Medicina Interna ad indirizzo Immuno-endocrino'), ('U1', 'Malattie Infettive'), ('V1', 'Medicina dello sport'), ('W1', 'Gastroenterologia'), ('X1', 'Pneumologia'), ('Y1', 'Endocrinologia 1'), ('Z1', 'Cardiologia 1'), ('A2', 'Endocrinologia 2'), ('B2', 'Chirurgia generale'), ('C2', 'Endoscopia digestiva interventistica'), ('D2', 'Otorinolaringoiatria 1'), ('E2', 'Otorinolaringoiatria audiologia e foniatria Universitaria'), ('F2', 'Ortopedia e Traumatologia 2'), ('G2', 'Medicina II'), ('H2', 'Nefrologia, Trapianti e Dialisi')], max_length=2, verbose_name='reparto')),
                ('rating', models.PositiveSmallIntegerField(verbose_name='valutazione')),
                ('active', models.BooleanField(default=True, verbose_name='attivo')),
                ('place', models.CharField(choices=[('A', 'Cisanello'), ('B', 'Santa Chiara'), ('C', 'Ospedale Cecina'), ('D', 'Ospedale Verisilia'), ('E', 'Ospedale Lucca'), ('F', 'Ospedale Livorno')], max_length=3, verbose_name='luogo')),
                ('attendance', models.PositiveSmallIntegerField(choices=[(1, 'Basta portare il libretto alla fine'), (2, 'Può firmare un altro per te'), (3, 'Devi firmare ma puoi fare magheggi'), (4, 'Devi andarci te ogni giorno')], verbose_name='presenze')),
            ],
            options={
                'verbose_name': 'tirocinio unipi',
                'verbose_name_plural': 'tirocini unipi',
                'db_table': 'internships',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="nome dell'università")),
                ('country', models.CharField(choices=[('Italy', 'Italy'), ('Andorra', 'Andorra'), ('United Arab Emirates', 'United Arab Emirates'), ('Afghanistan', 'Afghanistan'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Anguilla', 'Anguilla'), ('Albania', 'Albania'), ('Armenia', 'Armenia'), ('Angola', 'Angola'), ('Argentina', 'Argentina'), ('American Samoa', 'American Samoa'), ('Austria', 'Austria'), ('Australia', 'Australia'), ('Aruba', 'Aruba'), ('Aland Islands', 'Aland Islands'), ('Azerbaijan', 'Azerbaijan'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Barbados', 'Barbados'), ('Bangladesh', 'Bangladesh'), ('Belgium', 'Belgium'), ('Burkina Faso', 'Burkina Faso'), ('Bulgaria', 'Bulgaria'), ('Bahrain', 'Bahrain'), ('Burundi', 'Burundi'), ('Benin', 'Benin'), ('Saint Barthelemy', 'Saint Barthelemy'), ('Bermuda', 'Bermuda'), ('Brunei', 'Brunei'), ('Bolivia', 'Bolivia'), ('Bonaire Saint Eustatius and Saba', 'Bonaire Saint Eustatius and Saba'), ('Brazil', 'Brazil'), ('Bahamas', 'Bahamas'), ('Bhutan', 'Bhutan'), ('Botswana', 'Botswana'), ('Belarus', 'Belarus'), ('Belize', 'Belize'), ('Canada', 'Canada'), ('Cocos Islands', 'Cocos Islands'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Central African Republic', 'Central African Republic'), ('Republic of the Congo', 'Republic of the Congo'), ('Switzerland', 'Switzerland'), ('Ivory Coast', 'Ivory Coast'), ('Cook Islands', 'Cook Islands'), ('Chile', 'Chile'), ('Cameroon', 'Cameroon'), ('China', 'China'), ('Colombia', 'Colombia'), ('Colombia"Archipiélago de San Andrés', 'Colombia"Archipiélago de San Andrés'), ('Costa Rica', 'Costa Rica'), ('Cuba', 'Cuba'), ('Cape Verde', 'Cape Verde'), ('Curacao', 'Curacao'), ('Christmas Island', 'Christmas Island'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Germany', 'Germany'), ('Djibouti', 'Djibouti'), ('Denmark', 'Denmark'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('Algeria', 'Algeria'), ('Ecuador', 'Ecuador'), ('Estonia', 'Estonia'), ('Egypt', 'Egypt'), ('Western Sahara', 'Western Sahara'), ('Eritrea', 'Eritrea'), ('Spain', 'Spain'), ('Ethiopia', 'Ethiopia'), ('Ethiopia"Southern Nations Nationalities', 'Ethiopia"Southern Nations Nationalities'), ('Finland', 'Finland'), ('Fiji', 'Fiji'), ('Falkland Islands', 'Falkland Islands'), ('Micronesia', 'Micronesia'), ('Faroe Islands', 'Faroe Islands'), ('France', 'France'), ('Gabon', 'Gabon'), ('United Kingdom', 'United Kingdom'), ('Grenada', 'Grenada'), ('Georgia', 'Georgia'), ('French Guiana', 'French Guiana'), ('Guernsey', 'Guernsey'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Greenland', 'Greenland'), ('Gambia', 'Gambia'), ('Guinea', 'Guinea'), ('Guadeloupe', 'Guadeloupe'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Greece', 'Greece'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('Guatemala', 'Guatemala'), ('Guam', 'Guam'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Hong Kong', 'Hong Kong'), ('Honduras', 'Honduras'), ('Croatia', 'Croatia'), ('Haiti', 'Haiti'), ('Hungary', 'Hungary'), ('Indonesia', 'Indonesia'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Isle of Man', 'Isle of Man'), ('India', 'India'), ('Iraq', 'Iraq'), ('Iran', 'Iran'), ('Iceland', 'Iceland'), ('Jersey', 'Jersey'), ('Jamaica', 'Jamaica'), ('Jordan', 'Jordan'), ('Japan', 'Japan'), ('Kenya', 'Kenya'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Cambodia', 'Cambodia'), ('Kiribati', 'Kiribati'), ('Comoros', 'Comoros'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('North Korea', 'North Korea'), ('South Korea', 'South Korea'), ('Kuwait', 'Kuwait'), ('Cayman Islands', 'Cayman Islands'), ('Kazakhstan', 'Kazakhstan'), ('Laos', 'Laos'), ('Lebanon', 'Lebanon'), ('Saint Lucia', 'Saint Lucia'), ('Liechtenstein', 'Liechtenstein'), ('Sri Lanka', 'Sri Lanka'), ('Liberia', 'Liberia'), ('Lesotho', 'Lesotho'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Latvia', 'Latvia'), ('Libya', 'Libya'), ('Morocco', 'Morocco'), ('Monaco', 'Monaco'), ('Moldova', 'Moldova'), ('Montenegro', 'Montenegro'), ('Saint Martin', 'Saint Martin'), ('Madagascar', 'Madagascar'), ('Marshall Islands', 'Marshall Islands'), ('Macedonia', 'Macedonia'), ('Mali', 'Mali'), ('Myanmar', 'Myanmar'), ('Mongolia', 'Mongolia'), ('Macao', 'Macao'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Montserrat', 'Montserrat'), ('Malta', 'Malta'), ('Mauritius', 'Mauritius'), ('Maldives', 'Maldives'), ('Malawi', 'Malawi'), ('Mexico', 'Mexico'), ('Malaysia', 'Malaysia'), ('Namibia', 'Namibia'), ('Mozambique', 'Mozambique'), ('New Caledonia', 'New Caledonia'), ('Niger', 'Niger'), ('Norfolk Island', 'Norfolk Island'), ('Nigeria', 'Nigeria'), ('Nicaragua', 'Nicaragua'), ('Netherlands', 'Netherlands'), ('Norway', 'Norway'), ('Nepal', 'Nepal'), ('Nauru', 'Nauru'), ('Niue', 'Niue'), ('New Zealand', 'New Zealand'), ('Oman', 'Oman'), ('Panama', 'Panama'), ('Peru', 'Peru'), ('French Polynesia', 'French Polynesia'), ('Papua New Guinea', 'Papua New Guinea'), ('Philippines', 'Philippines'), ('Pakistan', 'Pakistan'), ('Poland', 'Poland'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Pitcairn', 'Pitcairn'), ('Puerto Rico', 'Puerto Rico'), ('Palestinian Territory', 'Palestinian Territory'), ('Portugal', 'Portugal'), ('Palau', 'Palau'), ('Paraguay', 'Paraguay'), ('Qatar', 'Qatar'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Serbia', 'Serbia'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saudi Arabia', 'Saudi Arabia'), ('Solomon Islands', 'Solomon Islands'), ('Seychelles', 'Seychelles'), ('Sudan', 'Sudan'), ('Sweden', 'Sweden'), ('Singapore', 'Singapore'), ('Saint Helena', 'Saint Helena'), ('Slovenia', 'Slovenia'), ('Svalbard and Jan Mayen', 'Svalbard and Jan Mayen'), ('Slovakia', 'Slovakia'), ('Sierra Leone', 'Sierra Leone'), ('San Marino', 'San Marino'), ('Senegal', 'Senegal'), ('Somalia', 'Somalia'), ('Suriname', 'Suriname'), ('South Sudan', 'South Sudan'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('El Salvador', 'El Salvador'), ('Sint Maarten', 'Sint Maarten'), ('Syria', 'Syria'), ('Swaziland', 'Swaziland'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Chad', 'Chad'), ('French Southern Territories', 'French Southern Territories'), ('Togo', 'Togo'), ('Thailand', 'Thailand'), ('Tajikistan', 'Tajikistan'), ('East Timor', 'East Timor'), ('Turkmenistan', 'Turkmenistan'), ('Tunisia', 'Tunisia'), ('Tonga', 'Tonga'), ('Turkey', 'Turkey'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tuvalu', 'Tuvalu'), ('Taiwan', 'Taiwan'), ('Tanzania', 'Tanzania'), ('Ukraine', 'Ukraine'), ('Uganda', 'Uganda'), ('United States', 'United States'), (' D.C."United States"Washington', ' D.C."United States"Washington'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vatican', 'Vatican'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Venezuela', 'Venezuela'), ('British Virgin Islands', 'British Virgin Islands'), ('U.S. Virgin Islands', 'U.S. Virgin Islands'), ('Vietnam', 'Vietnam'), ('Vanuatu', 'Vanuatu'), ('Wallis and Futuna', 'Wallis and Futuna'), ('Samoa', 'Samoa'), ('Kosovo', 'Kosovo'), ('Yemen', 'Yemen'), ('Mayotte', 'Mayotte'), ('South Africa', 'South Africa'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], max_length=45, verbose_name='stato')),
                ('link', models.CharField(max_length=300, verbose_name='link')),
            ],
            options={
                'verbose_name': 'università',
                'verbose_name_plural': 'università',
                'db_table': 'universities',
            },
        ),
        migrations.AddConstraint(
            model_name='university',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('country'), models.OrderBy(django.db.models.functions.text.Lower('name'), descending=True), name='country_name_unique'),
        ),
        migrations.AddField(
            model_name='unipiinternship',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unipi_internship', to='accounts.studentaccount', verbose_name='autore'),
        ),
        migrations.AddField(
            model_name='tag',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL, verbose_name='creato da'),
        ),
        migrations.AddField(
            model_name='sfslaberasmusadditionalattributes',
            name='experience',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sfs_lab_erasmus_attrs', to='experiences.experience', verbose_name='esperienza'),
        ),
        migrations.AddField(
            model_name='rating',
            name='experience',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='experiences.experience', verbose_name='esperienza'),
        ),
        migrations.AddField(
            model_name='internshipadditionalattributes',
            name='experience',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='internship_attrs', to='experiences.experience', verbose_name='esperienza'),
        ),
        migrations.AddField(
            model_name='experience',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='accounts.studentaccount', verbose_name='autore'),
        ),
        migrations.AddField(
            model_name='experience',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='experiences.city', verbose_name='città'),
        ),
        migrations.AddField(
            model_name='experience',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='experiences', to='experiences.tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='experience',
            name='universities',
            field=models.ManyToManyField(blank=True, to='experiences.university', verbose_name='università'),
        ),
        migrations.AddField(
            model_name='congressconferencesummerschooladditionalattributes',
            name='experience',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='congress_conference_summerschool_attrs', to='experiences.experience', verbose_name='esperienza'),
        ),
        migrations.AddConstraint(
            model_name='city',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('city'), django.db.models.functions.text.Lower('region'), django.db.models.functions.text.Lower('country'), name='city_region_country_unique'),
        ),
    ]
